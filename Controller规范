1.所有函数返回统一的ResultBean/PageResultBean格式.

2.Controller做参数格式的转换，不允许把json，map这类对象传到services去，也不允许services返回json、map.
一般情况下！写过代码都知道，map，json这种格式灵活，但是可读性差，如果放业务数据，每次阅读起来都比较困难。定义一个bean看着工作量多了，但代码清晰多了。

3.参数中一般情况不允许出现Request，Response这些对象.(主要是可读性问题。一般情况下)

4.不需要打印日志.(日志在AOP里面会打印，而且我的建议是大部分日志在Services这层打印).

5.ResultBean定义带泛型，使用了lombok.
@Data
public class ResultBean<T> implements Serializable {
    private static final long serialVersionUID = 1L;

    private static final int SUCCESS=0;
    private static final int FAIL=1;
    public static final int PERMISSION=2;

    private String msg="success";

    private int code=SUCCESS;

    private T data;

    public ResultBean() {
        super();
    }

    public ResultBean(T data) {
        super();
        this.data = data;
    }

    public ResultBean(Throwable e) {
        super();
        this.msg = e.toString();
        this.code = FAIL;
    }
}
6.AOP代码，主要就是打印日志和捕获异常，异常要区分已知异常和未知异常，
  其中未知的异常是我们重点关注的，可以做一些邮件通知啥的，已知异常可以再细分一下，可以不同的异常返回不同的返回码：
  
